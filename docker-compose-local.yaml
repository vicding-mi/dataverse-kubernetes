version: '3.5'

services:
  traefik:
    container_name: traefik
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "80:80"
#      - "8089:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./letsencrypt:/letsencrypt"

  postgresql:
    container_name: postgresql
    image: library/postgres:10.13
    restart: unless-stopped
    environment:
      - "LC_ALL"
      - "POSTGRES_DB=dataverse"
      - "POSTGRES_USER=dataverse"
      - "POSTGRES_PASSWORD=changeme"
      - "POSTGRES_PORT=5432"
    env_file: .env
    volumes:
      - ./data/postgresql_data:/var/lib/postgresql/data

  solr:
    container_name: solr
    image: iqss/solr-k8s
    volumes:
      - ./data/solr_data:/opt/solr/server/solr/collection1/data
    labels:
      - "traefik.http.routers.solr.rule=Host(`solr.${traefikhost}`)"
      - "traefik.http.services.solr.loadbalancer.server.port=8983"

  dataverse:
    container_name: dataverse
    user:
      "root"
    build:
      context: .
      dockerfile: ./docker/dataverse-k8s/payara/Dockerfile
    depends_on:
      - postgresql
      - solr
    env_file: .env
    volumes:
      - ./data/dataverse_data:/data
      - type: bind
        source: ./personas/docker-compose/secrets
        target: /secrets
    labels:
      - "traefik.http.routers.dataverse.rule=Host(`dv.docker.localhost`)"
      - "traefik.http.middlewares.dataverse.ipwhitelist.sourcerange=127.0.0.1/32, 0.0.0.0/0"
      - "traefik.http.routers.dataverse.middlewares=dataverse@docker"
      - "traefik.http.services.dataverse.loadbalancer.server.port=8080"

  dbgui:
    container_name: dbgui
    image: adminer
    depends_on:
      - postgresql
    labels:
      - "traefik.http.routers.dbgui.rule=Host(`dbgui.docker.localhost`)"
      - "traefik.http.middlewares.dbgui.ipwhitelist.sourcerange=127.0.0.1/32, 0.0.0.0/0"
      - "traefik.http.routers.dbgui.middlewares=dbgui@docker"
      - "traefik.http.services.dbgui.loadbalancer.server.port=8080"
