version: '3.5'

networks:
  traefik:

services:
  reverse-proxy:
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=traefik"
      - "--entrypoints.web.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8089:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # volume to store letsencrypt certificates
      - "./letsencrypt:/letsencrypt"
    networks:
      - traefik

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  postgresql:
    container_name: postgresql
    image: library/postgres:10.13
    restart: unless-stopped
    environment:
      - "LC_ALL"
      - "POSTGRES_DB=dataverse"
      - "POSTGRES_USER=dataverse"
      - "POSTGRES_PASSWORD=changeme"
      - "POSTGRES_PORT=5432"
    env_file: .env
    expose:
      - 5432
    volumes:
      - ./data/postgresql_data:/var/lib/postgresql/data
    networks:
      - traefik

  solr:
    container_name: solr
    image: iqss/solr-k8s
    expose:
      - 8983
    volumes:
      - ./data/solr_data:/opt/solr/server/solr/collection1/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.solr.rule=Host(`solr.${traefikhost}`)"
      - "traefik.http.services.solr.loadbalancer.server.port=8983"

  dataverse:
    container_name: dataverse
    user:
      "root"
    build:
      context: .
      dockerfile: ./docker/dataverse-k8s/payara/Dockerfile
    depends_on:
      - postgresql
      - solr
    ports:
      - 8080:8080
    env_file: .env
    volumes:
      - ./data/dataverse_data:/data
      - type: bind
        source: ./personas/docker-compose/secrets
        target: /secrets
        #read_only: true
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dataverse.rule=Host(`dataverse.docker.localdomain`)"
      - "traefik.http.services.dataverse.loadbalancer.server.port=8080"
#      - "traefik.http.middlewares.test-ipwhitelist.ipwhitelist.sourcerange=127.0.0.1/32"

#  dbgui:
#    container_name: dbgui
#    image: adminer
#    ports:
#      - 8089:8080
#    depends_on:
#      - postgresql

